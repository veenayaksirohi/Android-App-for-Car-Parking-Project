name: Android App Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Start Android Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        target: google_apis
        arch: x86
        profile: pixel_2
        avd-name: test-device
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
        script: |
          echo "Starting emulator..."
          adb wait-for-device
          echo "Emulator started successfully"

    - name: Wait for emulator to be ready
      run: |
        echo "Waiting for emulator to be ready..."
        adb wait-for-device
        # Disable animations for faster boot
        adb shell settings put global window_animation_scale 0
        adb shell settings put global transition_animation_scale 0
        adb shell settings put global animator_duration_scale 0
        # Wait for boot completion
        while [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]; do
          echo "Waiting for boot completion..."
          sleep 5
        done
        echo "Emulator is ready"

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}

    - name: Run app for 1 minute
      run: |
        ./gradlew installDebug
        adb shell am start -n com.example.parkingapp/.MainActivity
        sleep 60
        adb shell am force-stop com.example.parkingapp
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }} 