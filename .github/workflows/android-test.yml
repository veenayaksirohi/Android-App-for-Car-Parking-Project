name: Android Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: '9477386'
          build-tools-version: '33.0.0'
          platform-version: '33'
          platform-tools-version: '33.0.3'
          emulator-version: '33.3.9'
          ndk-version: '25.2.9519653'
          cmake-version: '3.22.1'
          accept-licenses: true
          
      - name: Create AVD
        run: |
          echo "Creating AVD..."
          sdkmanager "system-images;android-28;google_apis;x86"
          avdmanager create avd -n test_device -k "system-images;android-28;google_apis;x86" -d "pixel_2"
          
      - name: Start Emulator
        run: |
          echo "Starting emulator..."
          # Start ADB server first
          adb start-server
          
          # Start emulator with minimal configuration
          emulator -avd test_device \
            -no-window \
            -no-audio \
            -no-boot-anim \
            -no-snapshot \
            -no-snapshot-save \
            -memory 1024 \
            -cores 1 \
            -gpu swiftshader_indirect \
            -accel off \
            -verbose \
            -show-kernel &
          
          # Store the emulator process ID
          EMULATOR_PID=$!
          echo "Emulator process started with PID: $EMULATOR_PID"
          
          # Wait a moment for the process to start
          sleep 5
          
          # Verify emulator process is running
          if ! ps -p $EMULATOR_PID > /dev/null; then
            echo "Error: Emulator process failed to start"
            exit 1
          fi
          
      - name: Wait for Emulator
        run: |
          echo "Waiting for emulator to be ready..."
          timeout 180 bash -c '
            echo "Step 1: Verifying emulator process..."
            if ! ps aux | grep -v grep | grep -q "emulator"; then
              echo "Error: Emulator process not found"
              exit 1
            fi
            
            echo "Step 2: Checking ADB server..."
            adb kill-server
            adb start-server
            sleep 2
            
            echo "Step 3: Waiting for emulator in ADB devices..."
            for i in {1..36}; do
              echo "Attempt $i of 36..."
              if adb devices | grep -q "emulator"; then
                echo "Emulator detected in ADB devices"
                break
              fi
              if [ $i -eq 36 ]; then
                echo "Error: Emulator not detected in ADB devices after 3 minutes"
                exit 1
              fi
              echo "Still waiting for emulator in ADB devices..."
              sleep 5
            done
            
            echo "Step 4: Checking emulator status..."
            adb shell getprop | grep -E "init.svc.bootanim|sys.boot_completed"
            
            echo "Step 5: Disabling animations..."
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0
            
            echo "Step 6: Waiting for boot completion..."
            for i in {1..36}; do
              echo "Attempt $i of 36..."
              if [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" = "1" ]; then
                echo "Boot completed successfully"
                break
              fi
              if [ $i -eq 36 ]; then
                echo "Error: Boot did not complete within 3 minutes"
                exit 1
              fi
              echo "Boot animation status: $(adb shell getprop init.svc.bootanim)"
              echo "Boot completed status: $(adb shell getprop sys.boot_completed)"
              sleep 5
            done
            
            echo "Step 7: Final status check..."
            adb shell getprop | grep -E "init.svc.bootanim|sys.boot_completed"
            echo "Emulator is ready!"
          '
          
      - name: Run Tests
        run: |
          echo "Running tests..."
          ./gradlew connectedAndroidTest
          
      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up..."
          adb kill-server || true
          pkill -f emulator || true 